/**
 * Txing AI API
 * Txing AI API文档
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiCosPresignedUrlPost200Response from '../model/ApiCosPresignedUrlPost200Response';
import DtoGetPresignedURLReq from '../model/DtoGetPresignedURLReq';

/**
* COS service.
* @module api/COSApi
* @version 1.0
*/
export default class COSApi {

    /**
    * Constructs a new COSApi. 
    * @alias module:api/COSApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * 获取预签名URL
     * 获取文件上传或下载的预签名URL
     * @param {module:model/DtoGetPresignedURLReq} data 请求参数
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ApiCosPresignedUrlPost200Response} and HTTP response
     */
    apiCosPresignedUrlPostWithHttpInfo(data) {
      let postBody = data;
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling apiCosPresignedUrlPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiCosPresignedUrlPost200Response;
      return this.apiClient.callApi(
        '/api/cos/presigned-url', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * 获取预签名URL
     * 获取文件上传或下载的预签名URL
     * @param {module:model/DtoGetPresignedURLReq} data 请求参数
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ApiCosPresignedUrlPost200Response}
     */
    apiCosPresignedUrlPost(data) {
      return this.apiCosPresignedUrlPostWithHttpInfo(data)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
