/**
 * Txing AI API
 * Txing AI API文档
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoUpdatePasswordReq model module.
 * @module model/DtoUpdatePasswordReq
 * @version 1.0
 */
class DtoUpdatePasswordReq {
    /**
     * Constructs a new <code>DtoUpdatePasswordReq</code>.
     * @alias module:model/DtoUpdatePasswordReq
     * @param newPassword {String} 新密码 New password
     * @param oldPassword {String} 原密码 Old password
     */
    constructor(newPassword, oldPassword) { 
        
        DtoUpdatePasswordReq.initialize(this, newPassword, oldPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newPassword, oldPassword) { 
        obj['new_password'] = newPassword;
        obj['old_password'] = oldPassword;
    }

    /**
     * Constructs a <code>DtoUpdatePasswordReq</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoUpdatePasswordReq} obj Optional instance to populate.
     * @return {module:model/DtoUpdatePasswordReq} The populated <code>DtoUpdatePasswordReq</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoUpdatePasswordReq();

            if (data.hasOwnProperty('new_password')) {
                obj['new_password'] = ApiClient.convertToType(data['new_password'], 'String');
            }
            if (data.hasOwnProperty('old_password')) {
                obj['old_password'] = ApiClient.convertToType(data['old_password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoUpdatePasswordReq</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoUpdatePasswordReq</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DtoUpdatePasswordReq.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['new_password'] && !(typeof data['new_password'] === 'string' || data['new_password'] instanceof String)) {
            throw new Error("Expected the field `new_password` to be a primitive type in the JSON string but got " + data['new_password']);
        }
        // ensure the json data is a string
        if (data['old_password'] && !(typeof data['old_password'] === 'string' || data['old_password'] instanceof String)) {
            throw new Error("Expected the field `old_password` to be a primitive type in the JSON string but got " + data['old_password']);
        }

        return true;
    }


}

DtoUpdatePasswordReq.RequiredProperties = ["new_password", "old_password"];

/**
 * 新密码 New password
 * @member {String} new_password
 */
DtoUpdatePasswordReq.prototype['new_password'] = undefined;

/**
 * 原密码 Old password
 * @member {String} old_password
 */
DtoUpdatePasswordReq.prototype['old_password'] = undefined;






export default DtoUpdatePasswordReq;

