/**
 * Txing AI API
 * Txing AI API文档
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoUpdateModelReq model module.
 * @module model/DtoUpdateModelReq
 * @version 1.0
 */
class DtoUpdateModelReq {
    /**
     * Constructs a new <code>DtoUpdateModelReq</code>.
     * @alias module:model/DtoUpdateModelReq
     * @param name {String} 模型名称
     */
    constructor(name) { 
        
        DtoUpdateModelReq.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>DtoUpdateModelReq</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoUpdateModelReq} obj Optional instance to populate.
     * @return {module:model/DtoUpdateModelReq} The populated <code>DtoUpdateModelReq</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoUpdateModelReq();

            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('high_context')) {
                obj['high_context'] = ApiClient.convertToType(data['high_context'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoUpdateModelReq</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoUpdateModelReq</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DtoUpdateModelReq.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }

        return true;
    }


}

DtoUpdateModelReq.RequiredProperties = ["name"];

/**
 * 模型头像
 * @member {String} avatar
 */
DtoUpdateModelReq.prototype['avatar'] = undefined;

/**
 * 是否为默认模型
 * @member {Boolean} default
 */
DtoUpdateModelReq.prototype['default'] = undefined;

/**
 * 模型描述
 * @member {String} description
 */
DtoUpdateModelReq.prototype['description'] = undefined;

/**
 * 是否支持高上下文
 * @member {Boolean} high_context
 */
DtoUpdateModelReq.prototype['high_context'] = undefined;

/**
 * 模型名称
 * @member {String} name
 */
DtoUpdateModelReq.prototype['name'] = undefined;

/**
 * 模型标签
 * @member {String} tag
 */
DtoUpdateModelReq.prototype['tag'] = undefined;






export default DtoUpdateModelReq;

