/**
 * Txing AI API
 * Txing AI API文档
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoUpdateChannelReq model module.
 * @module model/DtoUpdateChannelReq
 * @version 1.0
 */
class DtoUpdateChannelReq {
    /**
     * Constructs a new <code>DtoUpdateChannelReq</code>.
     * @alias module:model/DtoUpdateChannelReq
     */
    constructor() { 
        
        DtoUpdateChannelReq.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DtoUpdateChannelReq</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoUpdateChannelReq} obj Optional instance to populate.
     * @return {module:model/DtoUpdateChannelReq} The populated <code>DtoUpdateChannelReq</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoUpdateChannelReq();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('models')) {
                obj['models'] = ApiClient.convertToType(data['models'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('retry')) {
                obj['retry'] = ApiClient.convertToType(data['retry'], 'Number');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoUpdateChannelReq</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoUpdateChannelReq</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['models'])) {
            throw new Error("Expected the field `models` to be an array in the JSON data but got " + data['models']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * 服务地址 Service endpoint
 * @member {String} endpoint
 */
DtoUpdateChannelReq.prototype['endpoint'] = undefined;

/**
 * 支持的模型列表 Supported models
 * @member {Array.<String>} models
 */
DtoUpdateChannelReq.prototype['models'] = undefined;

/**
 * 渠道名称 Channel name
 * @member {String} name
 */
DtoUpdateChannelReq.prototype['name'] = undefined;

/**
 * 优先级 Priority
 * @member {Number} priority
 */
DtoUpdateChannelReq.prototype['priority'] = undefined;

/**
 * 重试次数 Retry times
 * @member {Number} retry
 */
DtoUpdateChannelReq.prototype['retry'] = undefined;

/**
 * 密钥 Secret key
 * @member {String} secret
 */
DtoUpdateChannelReq.prototype['secret'] = undefined;

/**
 * 启用状态 Enable status
 * @member {Boolean} status
 */
DtoUpdateChannelReq.prototype['status'] = undefined;

/**
 * 渠道类型 Channel type
 * @member {String} type
 */
DtoUpdateChannelReq.prototype['type'] = undefined;

/**
 * 权重 Weight
 * @member {Number} weight
 */
DtoUpdateChannelReq.prototype['weight'] = undefined;






export default DtoUpdateChannelReq;

