/**
 * Txing AI API
 * Txing AI API文档
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoUpdateProfileReq model module.
 * @module model/DtoUpdateProfileReq
 * @version 1.0
 */
class DtoUpdateProfileReq {
    /**
     * Constructs a new <code>DtoUpdateProfileReq</code>.
     * @alias module:model/DtoUpdateProfileReq
     */
    constructor() { 
        
        DtoUpdateProfileReq.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DtoUpdateProfileReq</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoUpdateProfileReq} obj Optional instance to populate.
     * @return {module:model/DtoUpdateProfileReq} The populated <code>DtoUpdateProfileReq</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoUpdateProfileReq();

            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'Number');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoUpdateProfileReq</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoUpdateProfileReq</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }

        return true;
    }


}



/**
 * 年龄 Age
 * @member {Number} age
 */
DtoUpdateProfileReq.prototype['age'] = undefined;

/**
 * 头像 Avatar URL
 * @member {String} avatar
 */
DtoUpdateProfileReq.prototype['avatar'] = undefined;

/**
 * 邮箱 Email
 * @member {String} email
 */
DtoUpdateProfileReq.prototype['email'] = undefined;

/**
 * 性别 Gender: 0-未知 1-男 2-女
 * @member {Number} gender
 */
DtoUpdateProfileReq.prototype['gender'] = undefined;

/**
 * 手机号 Phone number
 * @member {String} phone
 */
DtoUpdateProfileReq.prototype['phone'] = undefined;






export default DtoUpdateProfileReq;

