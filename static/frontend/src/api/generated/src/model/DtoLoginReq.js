/**
 * Txing AI API
 * Txing AI API文档
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DtoLoginReq model module.
 * @module model/DtoLoginReq
 * @version 1.0
 */
class DtoLoginReq {
    /**
     * Constructs a new <code>DtoLoginReq</code>.
     * @alias module:model/DtoLoginReq
     * @param captcha {String} 验证码 Captcha
     * @param captchaId {String} 验证码ID Captcha ID
     * @param password {String} 密码 Password
     * @param username {String} 用户名 Username
     */
    constructor(captcha, captchaId, password, username) { 
        
        DtoLoginReq.initialize(this, captcha, captchaId, password, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, captcha, captchaId, password, username) { 
        obj['captcha'] = captcha;
        obj['captchaId'] = captchaId;
        obj['password'] = password;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>DtoLoginReq</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DtoLoginReq} obj Optional instance to populate.
     * @return {module:model/DtoLoginReq} The populated <code>DtoLoginReq</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DtoLoginReq();

            if (data.hasOwnProperty('captcha')) {
                obj['captcha'] = ApiClient.convertToType(data['captcha'], 'String');
            }
            if (data.hasOwnProperty('captchaId')) {
                obj['captchaId'] = ApiClient.convertToType(data['captchaId'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DtoLoginReq</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DtoLoginReq</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DtoLoginReq.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['captcha'] && !(typeof data['captcha'] === 'string' || data['captcha'] instanceof String)) {
            throw new Error("Expected the field `captcha` to be a primitive type in the JSON string but got " + data['captcha']);
        }
        // ensure the json data is a string
        if (data['captchaId'] && !(typeof data['captchaId'] === 'string' || data['captchaId'] instanceof String)) {
            throw new Error("Expected the field `captchaId` to be a primitive type in the JSON string but got " + data['captchaId']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

DtoLoginReq.RequiredProperties = ["captcha", "captchaId", "password", "username"];

/**
 * 验证码 Captcha
 * @member {String} captcha
 */
DtoLoginReq.prototype['captcha'] = undefined;

/**
 * 验证码ID Captcha ID
 * @member {String} captchaId
 */
DtoLoginReq.prototype['captchaId'] = undefined;

/**
 * 密码 Password
 * @member {String} password
 */
DtoLoginReq.prototype['password'] = undefined;

/**
 * 用户名 Username
 * @member {String} username
 */
DtoLoginReq.prototype['username'] = undefined;






export default DtoLoginReq;

